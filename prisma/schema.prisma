generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model app_user {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(100)
  role         app_user_role
  progress     progress[]
  review_check review_check[]
}

model book {
  id    Int     @id @default(autoincrement())
  title String  @db.VarChar(100)
  topic topic[]
}

model question_group {
  id          Int        @id @default(autoincrement())
  step_id     Int
  description String     @db.VarChar(100)
  progress    progress[]
  step        step       @relation(fields: [step_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model step {
  id             Int              @id @default(autoincrement())
  topic_id       Int
  title          String           @db.VarChar(100)
  question       question[]
  question_group question_group[]
  topic          topic            @relation(fields: [topic_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model topic {
  id      Int    @id @default(autoincrement())
  book_id Int
  title   String @db.VarChar(100)
  step    step[]
  book    book   @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model progress {
  id                 Int                         @id @default(autoincrement())
  question_group_id  Int
  app_user_id        Int
  completed          progress_completed
  in_progress_status progress_in_progress_status
  do_need_to_ask     Boolean
  app_user           app_user                    @relation(fields: [app_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  question_group     question_group              @relation(fields: [question_group_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model question {
  id             Int            @id @default(autoincrement())
  step_id        Int
  question_page  Int
  question_label String         @db.VarChar(50)
  solution_page  Int            @default(0)
  step           step           @relation(fields: [step_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  review_check   review_check[]
}

model review_check {
  id          Int                 @id @default(autoincrement())
  app_user_id Int
  question_id Int
  status      review_check_status @default(NOT_SOLVED)
  app_user    app_user            @relation(fields: [app_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  question    question            @relation(fields: [question_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum app_user_role {
  INSTRUCTOR
  STUDENT
}

enum progress_completed {
  COMPLETED
  IN_PROGRESS
  NOT_STARTED
}

enum progress_in_progress_status {
  PREV_HOMEWORK
  TODAY_WORK
  NEXT_HOMEWORK
}

enum review_check_status {
  DONE
  PASS
  WRONG
  CORRECT
  NOT_SOLVED
}
